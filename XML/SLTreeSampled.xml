<!-- Generate an inheritance tree from the stochastic logistic model, then prune all nodes
except the ancestors of a randomly selected set of leaves. -->

<beast version='2.0' namespace='master.beast:beast.core.parameter'>
    <run spec='InheritanceTrajectory'
         simulationTime="100"
         samplePopulationSizes="true"
         verbosity='1'>
        
        <model spec='InheritanceModel'>
            <population spec='Population' populationName='X' id='X'/>
            <reaction spec='InheritanceReaction' reactionName='Birth' rate="1.0">
                X -> 2X
            </reaction>
            <reaction spec='InheritanceReaction' reactionName='Death' rate="0.01">
                2X -> X
            </reaction>
        </model>                

        <initialState spec='InitState'>
            <populationSize spec='PopulationSize' population='@X' size='9'/>
            <lineageSeed spec='Individual' population='@X'/>
        </initialState>
        
        <lineageEndCondition spec='LineageEndCondition' nLineages="0"/>      
        
        <postProcessor spec='LineageSampler' nSamples="10" samplingTime="20" markOnly="true"/>
        
        <output spec='NexusOutput' fileName='SLTreeSampled_out.nexus' collapseSingleChildNodes="false"/>
        <output spec='JsonOutput' fileName='SLTreeSampled_out.json'/>
    </run>
</beast>
