<!-- Test stochastic simulation specification -->

<beast version='2.0' namespace='hamlet.beast:beast.core.parameter'>
    <run spec='EnsembleSummary'
         simulationTime='50'
         nSamples='1001'
         nTraj='1000'
         seed='53'>
        
        <integrator spec='TauLeapingIntegrator' stepSize="0.01"/>
        <!-- <integrator spec='GillespieIntegrator' /> -->

        <model spec='Model' id='model'>
            <population spec='Population' id='S' populationName='S'/>
            <population spec='Population' id='I' populationName='I'/>
            <population spec='Population' id='R' populationName='R'/>
            <population spec='Population' id='I_sample' populationName='I_sample'/>

            <!-- infection reaction -->
            <reaction spec='Reaction' reactionName="Infection" rate="0.001">
                <reactant idref='S'/>
                <reactant idref='I'/>
                <product idref='I'/>
                <product idref='I'/>
            </reaction>
            
            <!-- recovery reaction -->
            <reaction spec='Reaction' reactionName="Recovery" rate="0.25">
                <reactant idref='I'/>
                <product idref='R'/>
            </reaction>
            
            <!-- sampling reaction -->
            <reaction spec='Reaction' reactionName="Sampling" rate="0.25">
                <reactant idref='I'/>
                <product idref='I_sample'/>
            </reaction>
        </model>

        <initialState spec='InitState'>
            <populationSize spec='PopulationSize' size='999'>
                <population idref='S'/>
            </populationSize>
            <populationSize spec='PopulationSize' size='1'>
                <population idref='I'/>
            </populationSize>
            <populationSize spec='PopulationSize' size='0'>
                <population idref='I_sample'/>
            </populationSize>
            <populationSize spec='PopulationSize' size='0'>
                <population idref='R'/>
            </populationSize>
        </initialState>

        <moment spec='Moment' momentName='S'>
            <factor idref='S'/>
        </moment>

        <moment spec='Moment' momentName='I'>
            <factor idref='I'/>
        </moment>
        
        <moment spec='Moment' momentName='Isamp'>
            <factor idref='I_sample'/>
        </moment>
        
        <moment spec='Moment' momentName='R'>
            <factor idref='R'/>
        </moment>
        
        <output spec='JsonOutput' fileName='out.json'/>
    </run>
</beast>
