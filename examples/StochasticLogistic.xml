<!-- Test stochastic simulation specification -->

<beast version='2.0' namespace='viralPopGen.beast:beast.core.parameter'>
       <run spec='StochasticSimulation'
		simulationTime='100'
		nTimeSteps='10001'
		nSamples='1001'
		nTraj='100'
		seed='53'
		outFileName='out.txt'>

		<model spec='Model' id='model'>
			<population spec='Population' id='X' popName='X'/>
			<reaction spec='Reaction'>
				<rate spec='RealParameter'>1.0</rate>
				<reactantSchema spec='Schema'>
					<popSchema spec='PopSchema'>
						<population idref='X'/>
					</popSchema>
				</reactantSchema>
				<productSchema spec='Schema'>
					<popSchema spec='PopSchema'>
						<population idref='X'/>
						<population idref='X'/>
					</popSchema>
				</productSchema>
			</reaction>
			<reaction spec='Reaction'>
				<rate spec='RealParameter'>0.01</rate>
				<reactantSchema spec='Schema'>
					<popSchema spec='PopSchema'>
						<population idref='X'/>
						<population idref='X'/>
					</popSchema>
				</reactantSchema>
				<productSchema spec='Schema'>
					<popSchema spec='PopSchema'>
						<population idref='X'/>
					</popSchema>
				</productSchema>
			</reaction>
		</model>

		<initialState spec='viralPopGen.beast.InitState'>
			<populationSize spec='PopulationSize' size='10'>
				<population idref='X'/>
			</populationSize>
			<model idref='model'/>
		</initialState>

		<moment spec='viralPopGen.beast.Moment' momentName='X'>
			<momentSchema spec='Schema'>
				<popSchema spec='PopSchema'>
					<population idref='X'/>
				</popSchema>
			</momentSchema>
		</moment>
	</run>
</beast>
